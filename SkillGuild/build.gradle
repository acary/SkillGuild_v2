plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "net.serenity-bdd.serenity-gradle-plugin" version "3.2.5"
	id 'java'
	id 'war'
	id "org.sonarqube" version "3.4.0.2513"
}

defaultTasks 'clean', 'test', 'aggregate'

war {
  archiveFileName = "${archivesBaseName}.war"
  destinationDirectory = file("../")          // Project workspace directory
}

group = 'com.skillguildapp.skillguild'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext {
	slf4jVersion = '1.7.7'
	serenityCoreVersion = '3.2.5'
	junitVersion = '5.8.2'
	assertJVersion = '3.23.1'
	logbackVersion = '1.2.11'
	lombokVersion = '1.18.24'
}

repositories {
	mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

dependencies {
	implementation project(':SkillGuildJPA')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.sendgrid:sendgrid-java:4.9.3'
	runtimeOnly 'mysql:mysql-connector-java'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.cucumber:cucumber-java:7.0.0'
	testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
			"net.serenity-bdd:serenity-junit5:${serenityCoreVersion}",
			"org.junit.jupiter:junit-jupiter:${junitVersion}",
			"org.assertj:assertj-core:${assertJVersion}",
			"org.projectlombok:lombok:${lombokVersion}",
			"ch.qos.logback:logback-classic:${logbackVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	systemProperties System.getProperties()
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'bdd', 'src/test/resources/features']
        }
    }
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)